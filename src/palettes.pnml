// This is part of Polish PKP Set 2.0 NewGRF, adapted for Polroad set.
// Don't include any headers inside this file!
// (c) Tadeusz Domagalski, GPL 2.0

// Sprites for recolouring cargoes in open wagons/trucks
#define NUM_CARGO_COLOURS   14
// cargo colors:
#define CARGO_PALETTE_0_COAL \
        0xAA: 0x01;\
        0xAB: 0x01;\
        0xAC: 0x02;\
        0xAD: 0x02;\
        0xAE: 0x03;\
        0xAF: 0x04;

#define CARGO_PALETTE_1_GRAI \
        0xAA: 0x41;\
        0xAB: 0x42;\
        0xAC: 0x44;\
        0xAD: 0x33;\
        0xAE: 0x44;\
        0xAF: 0x45;\
        0xB0: 0x0E;\
        0xB1: 0x0F;

#define CARGO_PALETTE_2_IORE \
        0xAA: 0x69;\
        0xAB: 0x47;\
        0xAC: 0x48;\
        0xAD: 0x49;\
        0xAE: 0x4A;\
        0xAF: 0x4B;

#define CARGO_PALETTE_3_CORE \
        0xAA: 0x58;\
        0xAB: 0x19;\
        0xAC: 0x36;\
        0xAD: 0x1A;\
        0xAE: 0x37;\
        0xAF: 0x38;

#define CARGO_PALETTE_4_AORE \
        0xAA: 0x2A;\
        0xAB: 0x2B;\
        0xAC: 0x4A;\
        0xAD: 0x2C;\
        0xAE: 0xA2;\
        0xAF: 0x2E;

#define CARGO_PALETTE_5_CLAY \
        0xAA: 0x22;\
        0xAB: 0x6D;\
        0xAC: 0x4C;\
        0xAD: 0x75;\
        0xAE: 0x25;\
        0xAF: 0x4F;

#define CARGO_PALETTE_6_GRAV \
        0xAA: 0x07;\
        0xAB: 0x08;\
        0xAC: 0x09;\
        0xAD: 0x0A;\
        0xAE: 0x0B;\
        0xAF: 0x0C;\
        0xB0: 0x0D;\
        0xB1: 0x0E;

#define CARGO_PALETTE_7_LIME \
        0xAA: 0x08;\
        0xAB: 0x0A;\
        0xAC: 0x1E;\
        0xAD: 0x0B;\
        0xAE: 0x3B;\
        0xAF: 0x0C;

#define CARGO_PALETTE_8_OLSD \
        0xAA: 0x22;\
        0xAB: 0x6D;\
        0xAC: 0x38;\
        0xAD: 0x5C;\
        0xAE: 0x6F;\
        0xAF: 0x5E;

#define CARGO_PALETTE_9_SAND \
        0xAA: 0x6F;\
        0xAB: 0x3A;\
        0xAC: 0x1E;\
        0xAD: 0x3B;\
        0xAE: 0x26;\
        0xAF: 0x27;\
        0xB0: 0x44;\
        0xB1: 0x45;

#define CARGO_PALETTE_A_SCMT \
        0xAA: 0x02;\
        0xAB: 0x03;\
        0xAC: 0x7B;\
        0xAD: 0x11;\
        0xAE: 0x72;\
        0xAF: 0x4D;

#define CARGO_PALETTE_B_SGBT \
        0xAA: 0x22;\
        0xAB: 0x6F;\
        0xAC: 0x78;\
        0xAD: 0x1F;\
        0xAE: 0x27;\
        0xAF: 0xA9;

#define CARGO_PALETTE_C_SULP \
        0xAA: 0x40;\
        0xAB: 0x41;\
        0xAC: 0x57;\
        0xAD: 0x5E;\
        0xAE: 0x42;\
        0xAF: 0x32;

#define CARGO_PALETTE_D_UNKN \
        0xAA: 0x58;\
        0xAB: 0x40;\
        0xAC: 0x1D;\
        0xAD: 0xC2;\
        0xAE: 0x42;\
        0xAF: 0xD1;

#define NUM_CC_COLOURS  16
/* pseudo2cc palettes */
#define COMPANY_PALETTE_BLUE1ccWHITE2cc  		\
0xC6: 0x92;  0xC7: 0x93;  0xC8: 0x94;  0xC9: 0x95;  0xCA: 0x96;  0xCB: 0x97;  0xCC: 0x98;  0xCD: 0x99; 	0x50: 0x10;  0x51: 0x11;  0x52: 0x12;  0x53: 0x13;  0x54: 0x14;  0x55: 0x15;  0x56: 0x16;  0x57: 0x17;

#define COMPANY_PALETTE_BLUE1ccNAVY2cc   		\
0xC6: 0x90;  0xC7: 0x91;  0xC8: 0x92;  0xC9: 0x93;  0xCA: 0x94;  0xCB: 0x95;  0xCC: 0x96;  0xCD: 0x97; 	0x50: 0x88;  0x51: 0x89;  0x52: 0x8A;  0x53: 0x8B;  0x54: 0x8C;  0x55: 0x8D;  0x56: 0x8E;  0x57: 0x8F;

#define COMPANY_PALETTE_BLUE1ccGREEN2cc   		\
0xC6: 0x90;  0xC7: 0x91;  0xC8: 0x92;  0xC9: 0x93;  0xCA: 0x94;  0xCB: 0x95;  0xCC: 0x96;  0xCD: 0x97; 	

#define COMPANY_PALETTE_BLUE1ccYELLOW2cc   		\
0xC6: 0x91;  0xC7: 0x92;  0xC8: 0x93;  0xC9: 0x94;  0xCA: 0x95;  0xCB: 0x96;  0xCC: 0x97;  0xCD: 0x98; 	0x50: 0x40;  0x51: 0xBC;  0x52: 0xBD;  0x53: 0xBE;  0x54: 0xBF;  0x55: 0x33;  0x56: 0x34;  0x57: 0x45;

#define COMPANY_PALETTE_GREEN1ccYELLOW2cc  		\
0xC6: 0x51;  0xC7: 0x52;  0xC8: 0x53;  0xC9: 0x54;  0xCA: 0xCE;  0xCB: 0xCF;  0xCC: 0xD0;  0xCD: 0xD1; 	0x50: 0xBB;  0x51: 0xBC;  0x52: 0xBD;  0x53: 0xBE;  0x54: 0xBF;  0x55: 0x34;  0x56: 0x44;  0x57: 0x45;

#define COMPANY_PALETTE_GREEN1ccWHITE2cc  		\
0xC6: 0x50;  0xC7: 0x51;  0xC8: 0x52;  0xC9: 0x53;  0xCA: 0x54;  0xCB: 0x55;  0xCC: 0x56;  0xCD: 0x57; 	0x50: 0x10;  0x51: 0x11;  0x52: 0x12;  0x53: 0x13;  0x54: 0x14;  0x55: 0x15;  0x56: 0x16;  0x57: 0x17;

#define COMPANY_PALETTE_KHAKI1ccBROWN2cc  		\
0xC6: 0x58;  0xC7: 0x59;  0xC8: 0x5A;  0xC9: 0x5B;  0xCA: 0x5C;  0xCB: 0x5D;  0xCC: 0x5E;  0xCD: 0x5F; 	0x50: 0x68;  0x51: 0x69;  0x52: 0x6A;  0x53: 0x6B;  0x54: 0x6C;  0x55: 0x6D;  0x56: 0x6E;  0x57: 0x6F;

#define COMPANY_PALETTE_YELLOW1ccGRAY2cc  		\
0xC6: 0x3F;  0xC7: 0x40;  0xC8: 0xBC;  0xC9: 0xBD;  0xCA: 0xBE;  0xCB: 0xBF;  0xCC: 0x33;  0xCD: 0x34; 	0x50: 0x03;  0x51: 0x04;  0x52: 0x05;  0x53: 0x06;  0x54: 0x13;  0x55: 0x14;  0x56: 0x15;  0x57: 0x16;

#define COMPANY_PALETTE_CRIMSON1ccGRAY2cc  		\
0xC6: 0x48;  0xC7: 0x49;  0xC8: 0x4A;  0xC9: 0x4B;  0xCA: 0x4C;  0xCB: 0x4D;  0xCC: 0x4E;  0xCD: 0x4F; 	0x50: 0x03;  0x51: 0x04;  0x52: 0x05;  0x53: 0x06;  0x54: 0x13;  0x55: 0x14;  0x56: 0x15;  0x57: 0x16;

#define COMPANY_PALETTE_RED1ccYELLOW2cc  		\
0xC6: 0xB2;  0xC7: 0xB3;  0xC8: 0xB4;  0xC9: 0xB5;  0xCA: 0xB6;  0xCB: 0xB7;  0xCC: 0xB8;  0xCD: 0xB9; 	0x50: 0xBB;  0x51: 0xBC;  0x52: 0xBD;  0x53: 0xBE;  0x54: 0xBF;  0x55: 0x34;  0x56: 0x44;  0x57: 0x45;

#define COMPANY_PALETTE_BLACK1ccNAVY2cc  		\
0xC6: 0x02;  0xC7: 0x03;  0xC8: 0x04;  0xC9: 0x05;  0xCA: 0x06;  0xCB: 0x07;  0xCC: 0x08;  0xCD: 0x09; 	0x50: 0x88;  0x51: 0x89;  0x52: 0x8A;  0x53: 0x8B;  0x54: 0x8C;  0x55: 0x8D;  0x56: 0x8E;  0x57: 0x8F;

#define COMPANY_PALETTE_WHITE1ccORANGE2cc  		\
0xC6: 0x07;  0xC7: 0x08;  0xC8: 0x09;  0xC9: 0x0A;  0xCA: 0x0B;  0xCB: 0x0C;  0xCC: 0x0D;  0xCD: 0x0E; 	0x50: 0xB9;  0x51: 0xBA;  0x52: 0xBB;  0x53: 0xBC;  0x54: 0xBD;  0x55: 0xBE;  0x56: 0xBF;  0x57: 0x34;

#define COMPANY_PALETTE_GRAY1ccGREEN2cc  		\
0xC6: 0x10;  0xC7: 0x11;  0xC8: 0x12;  0xC9: 0x13;  0xCA: 0x14;  0xCB: 0x15;  0xCC: 0x16;  0xCD: 0x17; 	

#define COMPANY_PALETTE_CREAM1ccGREEN2cc  		\
0xC6: 0x20;  0xC7: 0x21;  0xC8: 0x22;  0xC9: 0x23;  0xCA: 0x24;  0xCB: 0x25;  0xCC: 0x26;  0xCD: 0x27; 	

#define COMPANY_PALETTE_CREAM1ccWHITE2cc  		\
0xC6: 0x20;  0xC7: 0x21;  0xC8: 0x22;  0xC9: 0x23;  0xCA: 0x24;  0xCB: 0x25;  0xCC: 0x26;  0xCD: 0x27; 	0x50: 0x10;  0x51: 0x11;  0x52: 0x12;  0x53: 0x13;  0x54: 0x14;  0x55: 0x15;  0x56: 0x16;  0x57: 0x17;

#define COMPANY_PALETTE_ORANGE1ccBLUE2cc  		\
0xC6: 0xB9;  0xC7: 0xBA;  0xC8: 0xBB;  0xC9: 0xBC;  0xCA: 0xBD;  0xCB: 0xBE;  0xCC: 0xBF;  0xCD: 0x34; 	0x50: 0x92;  0x51: 0x93;  0x52: 0x94;  0x53: 0x95;  0x54: 0x96;  0x55: 0x97;  0x56: 0x98;  0x57: 0x99;

#define RECOLOUR_SPRITE(cargo, company_colors) recolour_sprite { CARGO_PALETTE_##cargo COMPANY_PALETTE_##company_colors }

#define RECOLOUR_SPRITE_GROUP(cargo) \
    RECOLOUR_SPRITE(cargo, BLUE1ccGREEN2cc) \
    RECOLOUR_SPRITE(cargo, GREEN1ccYELLOW2cc) \
    RECOLOUR_SPRITE(cargo, CRIMSON1ccGRAY2cc) \
    RECOLOUR_SPRITE(cargo, YELLOW1ccGRAY2cc) \
    RECOLOUR_SPRITE(cargo, RED1ccYELLOW2cc) \
    RECOLOUR_SPRITE(cargo, BLUE1ccWHITE2cc) \
    RECOLOUR_SPRITE(cargo, GREEN1ccWHITE2cc) \
    RECOLOUR_SPRITE(cargo, KHAKI1ccBROWN2cc) \
    RECOLOUR_SPRITE(cargo, BLUE1ccYELLOW2cc) \
    RECOLOUR_SPRITE(cargo, CREAM1ccWHITE2cc) \
    RECOLOUR_SPRITE(cargo, BLACK1ccNAVY2cc) \
    RECOLOUR_SPRITE(cargo, BLUE1ccNAVY2cc) \
    RECOLOUR_SPRITE(cargo, ORANGE1ccBLUE2cc) \
    RECOLOUR_SPRITE(cargo, CREAM1ccGREEN2cc) \
    RECOLOUR_SPRITE(cargo, GRAY1ccGREEN2cc) \
    RECOLOUR_SPRITE(cargo, WHITE1ccORANGE2cc)

palette_cargo_cc = reserve_sprites(NUM_CARGO_COLOURS*NUM_CC_COLOURS);

replace(palette_cargo_cc){
    RECOLOUR_SPRITE_GROUP(0_COAL)
    RECOLOUR_SPRITE_GROUP(1_GRAI)
    RECOLOUR_SPRITE_GROUP(2_IORE)
    RECOLOUR_SPRITE_GROUP(3_CORE)
    RECOLOUR_SPRITE_GROUP(4_AORE)
    RECOLOUR_SPRITE_GROUP(5_CLAY)
    RECOLOUR_SPRITE_GROUP(6_GRAV)
    RECOLOUR_SPRITE_GROUP(7_LIME)
    RECOLOUR_SPRITE_GROUP(8_OLSD)
    RECOLOUR_SPRITE_GROUP(9_SAND)
    RECOLOUR_SPRITE_GROUP(A_SCMT)
    RECOLOUR_SPRITE_GROUP(B_SGBT)
    RECOLOUR_SPRITE_GROUP(C_SULP)
    RECOLOUR_SPRITE_GROUP(D_UNKN)
    }

#define COMPANY_RECOLOUR(cc1) \
switch(FEAT_TRAINS, SELF, switch_bulk_##cc1##_recolour, cargo_type_in_veh) { \
    COAL: return palette_cargo_cc + 0*NUM_CC_COLOURS + cc1; \
    GRAI: return palette_cargo_cc + 1*NUM_CC_COLOURS + cc1; \
    WHEA: return palette_cargo_cc + 1*NUM_CC_COLOURS + cc1; \
    MAIZ: return palette_cargo_cc + 1*NUM_CC_COLOURS + cc1; \
    IORE: return palette_cargo_cc + 2*NUM_CC_COLOURS + cc1; \
    CORE: return palette_cargo_cc + 3*NUM_CC_COLOURS + cc1; \
    AORE: return palette_cargo_cc + 4*NUM_CC_COLOURS + cc1; \
    CLAY: return palette_cargo_cc + 5*NUM_CC_COLOURS + cc1; \
    FERT: return palette_cargo_cc + 5*NUM_CC_COLOURS + cc1;  \
    GRVL: return palette_cargo_cc + 6*NUM_CC_COLOURS + cc1; \
    LIME: return palette_cargo_cc + 7*NUM_CC_COLOURS + cc1; \
    OLSD: return palette_cargo_cc + 8*NUM_CC_COLOURS + cc1; \
    POTA: return palette_cargo_cc + 7*NUM_CC_COLOURS + cc1;  \
    SAND: return palette_cargo_cc + 9*NUM_CC_COLOURS + cc1; \
    SCMT: return palette_cargo_cc + 10*NUM_CC_COLOURS + cc1; \
    SGBT: return palette_cargo_cc + 11*NUM_CC_COLOURS + cc1; \
    SGCN: return palette_cargo_cc + 10*NUM_CC_COLOURS + cc1;  \
    SULP: return palette_cargo_cc + 12*NUM_CC_COLOURS + cc1; \
    GOOD: return palette_cargo_cc + 6*NUM_CC_COLOURS + cc1;  \
    VEHI: return palette_cargo_cc + 9*NUM_CC_COLOURS + cc1;  \
    ENSP: return palette_cargo_cc + 9*NUM_CC_COLOURS + cc1;  \
    FMSP: return palette_cargo_cc + 1*NUM_CC_COLOURS + cc1;  \
    MNSP: return palette_cargo_cc + 5*NUM_CC_COLOURS + cc1;  \
 return palette_cargo_cc + 13*NUM_CC_COLOURS + cc1; \
}

COMPANY_RECOLOUR(company_colour1)
COMPANY_RECOLOUR(7)
COMPANY_RECOLOUR(14)


switch(FEAT_TRAINS, SELF, switch_brown_recolour, cargo_type_in_veh) {
 return palette_cargo_cc + 13*NUM_CC_COLOURS + 7; //KHAKI1ccBROWN2cc
}

switch(FEAT_TRAINS, SELF, switch_green_recolour, cargo_type_in_veh) {
 return palette_cargo_cc + 13*NUM_CC_COLOURS + 14; //GRAY1ccGREEN2cc
}

switch(FEAT_TRAINS, SELF, switch_1cc_recolour, cargo_type_in_veh) {
 return palette_cargo_cc + 13*NUM_CC_COLOURS + company_colour1; 
}

palette_olive_red = reserve_sprites(1);
replace(palette_olive_red) { recolour_sprite {
0xC6: 0x58;  0xC7: 0x59;  0xC8: 0x5A;  0xC9: 0x5B;  0xCA: 0x5C;  0xCB: 0x5D;  0xCC: 0x5E;  0xCD: 0x5F; 	0x50: 0x46;  0x51: 0xB2;  0x52: 0xB3;  0x53: 0xB4;  0x54: 0xB5;  0x55: 0xB6;  0x56: 0xA2;  0x57: 0xA3;
        } }

palette_black_red = reserve_sprites(1);
replace(palette_black_red) { recolour_sprite {
0xC6: 0xD6;  0xC7: 0xD7;  0xC8: 0x88;  0xC9: 0x6A;  0xCA: 0x58;  0xCB: 0x10;  0xCC: 0x11;  0xCD: 0x12; 	0x50: 0x46;  0x51: 0xB2;  0x52: 0xB3;  0x53: 0xB4;  0x54: 0xB5;  0x55: 0xB6;  0x56: 0xA2;  0x57: 0xA3;
        } }

switch (FEAT_TRAINS, SELF, switch_livery_subtype_car, cargo_subtype)
{
  0: return switch_1cc_recolour; 
  1: return switch_brown_recolour; //KHAKI1ccBROWN2cc
  2: return switch_green_recolour; //GRAY1ccGREEN2cc
     return CB_FAILED;
}  

switch (FEAT_TRAINS, SELF, switch_livery_subtype_mapping_cargo, cargo_subtype)
{
  0: return switch_bulk_company_colour1_recolour; 
  1: return switch_bulk_7_recolour; //KHAKI1ccBROWN2cc
  2: return switch_bulk_14_recolour; //GRAY1ccGREEN2cc
     return CB_FAILED;
}  

switch (FEAT_TRAINS, SELF, switch_livery_subtype_loco, cargo_subtype)
{
  0: return palette_olive_red; 
  1: return palette_black_red;
  2: return switch_1cc_recolour;
     return CB_FAILED;
}  

switch (FEAT_TRAINS, SELF, switch_car_livery_subtype_text, cargo_subtype)
{
  0: return string(STR_LIVERY_Q2CC);
  1: return string(STR_LIVERY_BROWN);
  2: return string(STR_LIVERY_GREEN);
     return CB_RESULT_NO_TEXT;
}  

switch (FEAT_TRAINS, SELF, switch_loco_livery_subtype_text, cargo_subtype)
{
  0: return string(STR_LIVERY_OLIVE);
  1: return string(STR_LIVERY_BLACK);
  2: return string(STR_LIVERY_Q2CC);
     return CB_RESULT_NO_TEXT;
}  


